<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.ac.ju.dao.EmployeeDao">
	
	<select id="getEmployeeByNo" parameterType="int" resultType="employee">
		select 
			E.employee_no 				as no,
			E.employee_password			as password, 
			E.employee_name				as name,
			E.employee_gender			as gender,
			E.employee_email 			as email,
			E.employee_phone_number		as phoneNumber,
			E.employee_address			as address,
			E.employee_photo_name		as photoName,
			P.position_name				as "position.name",
			D.department_name 			as "department.name"
		from 
			employees E, position P, departments D 
		where 
			E.department_id = D.department_id
			and E.position_id = P.position_id
			and E.employee_no = #{value}
	</select>
	
	<select id="getAllMajors" resultType="major">
		select 
			major_no 			as no,
			major_name			as name,
			admission_count		as admissionCount,
			major_head			as "head.no",
			major_create_date  	as createDate 
		from 
			majors	
	</select>
	
	<select id="searchStudentsCount" parameterType="map" resultType="int">
		select count(*)
		from students
		<where>
			<if test="status != null">
				student_div = #{status}
			</if>
			<if test="grade != null">
				and student_grade = #{grade}
			</if>
			<if test="major != null">
				and major_no = #{major}
			</if>
			<if test="name != null">
				and student_name = #{name}
			</if>
			<if test="studentNo != null">
				and student_no = #{studentNo}
			</if>
			<if test="tel != null">
				and student_phone_number = #{tel}
			</if>
		</where> 
	</select>
	
	<select id="searchStudents" parameterType="map" resultType="student" >
		select *
		from(
				select 
					A.student_no 				as no,
					A.major_no					as "major.no",
					B.major_name				as "major.name",
					A.professor_no				as "professor.no",
					A.student_name				as name,
					A.student_password			as password,
					A.student_birth				as birth,
					A.student_gender			as gender,
					A.student_email				as email, 
					A.student_phone_number		as phoneNumber,
					A.student_address			as address,
					A.student_grade				as grade,
					A.transfer_yn				as transferYn,
					A.student_create_date		as createDate,
					A.student_div				as division,
					A.student_photo_name 		as photoName,
					row_number() over (order by student_no desc) as rn
				from 
						students A, majors B
				where
					A.major_no = B.major_no
					<if test="status != null">
						and A.student_div = #{status}
					</if>
					<if test="grade != null">
						and A.student_grade = #{grade}
					</if>
					<if test="major != null">
						and A.major_no = #{major}
					</if>
					<if test="name != null">
						and A.student_name = #{name}
					</if>
					<if test="studentNo != null">
						and A.student_no = #{studentNo}
					</if>
					<if test="tel != null">
						and A.student_phone_number = #{tel}
					</if>
				)
		where 
			rn >= #{beginIndex}
			and rn &lt;= #{endIndex}		
	</select> 
	
	<select id="getStudentByNo" parameterType="int" resultType="student">
		select 
			A.student_no 				as no,
			A.major_no					as "major.no",
			B.major_name				as "major.name",
			A.professor_no				as "professor.no",
			A.student_name				as name,
			A.student_password			as password,
			A.student_birth				as birth,
			A.student_gender			as gender,
			A.student_email				as email, 
			A.student_phone_number		as phoneNumber,
			A.student_address			as address,
			A.student_grade				as grade,
			A.transfer_yn				as transferYn,
			A.student_create_date		as createDate,
			A.student_div				as division,
			A.student_photo_name 		as photoName
		from 
			students A, majors B
		where 
			A.student_no = #{value}
			and A.major_no = B.major_no
	</select>
	
	<update id="updateStudentStatusByNo" parameterType="student">
		update students
		set student_div = #{division}
		where student_no = #{no}
	</update>
	
	<!-- <insert id="insertStudent" parameterType="student"> 
		insert into students
			(student_no, major_no, professor_no, student_name, student_password, student_birth, student_gender, student_email, student_phone_number, student_address, student_grade, student_photo_name)
		values
			(121212, 10, '어쩌구', 'zxcv1234', to_date('1992-05-15', 'yyyy-mm-dd'),'M', 'yang@navercom' , '010-3333-2222', '경기도 고양시', 3 , '사진이름' );
	</insert> -->
	
</mapper>