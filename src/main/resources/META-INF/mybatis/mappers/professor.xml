<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.ac.ju.dao.ProfessorDao">
	
	<resultMap type="professor" id="professorResultMap">
		<result property="no" column="professor_no"/>
		<result property="major.no" column="major_no"/>
		<result property="position.id" column="position_id"/>
		<result property="name" column="professor_name"/>
		<result property="password" column="professor_password"/>
		<result property="birth" column="professor_birth"/>
		<result property="gender" column="professor_gender"/>
		<result property="email" column="professor_email"/>
		<result property="phoneNumber" column="professor_phone_number"/>
		<result property="address" column="professor_address"/>
		<result property="hireDate" column="professor_hire_date"/>
		<result property="salary" column="professor_salary"/>
		<result property="status" column="professor_status"/>
		<result property="createDate" column="professor_create_date"/>
		<result property="photoName" column="professor_photo_name"/>
	</resultMap>
	
	<!-- 번호로 교수조회 -->
	<select id="getProfessorByNo" parameterType="int" resultMap="professorResultMap">
		select *
		from professors
		where professor_no = #{value}
	</select>
	
	<!-- 강의 갯수 조회 -->
	<select id="getAllClassCount" parameterType="int" resultType="int">
		select count(*)
		from courses
		where professor_no = #{value}
	</select>
	<!-- 교수번호로 교과목 조회 -->
	<select id="getAllClassByProfId" parameterType="int" resultType="course">
		select 
			c.course_no no,
			c.professor_no "professor.no",
			f.professor_name "professor.name",
			c.major_no "major.no",
			m.major_name "major.name",
			c.course_name name,
			c.course_credit credit,
			c.course_year year,
			c.course_term term,
			c.course_must_yn mustYn,
			c.course_pass_yn passYn,
			c.course_create_date createDate,
			c.course_quota quota,
			c.course_count count
		from
			courses c, majors m, professors f
		where
			c.professor_no = #{value}
		and
			c.major_no = m.major_no
		and
			c.professor_no = f.professor_no
	</select>
	
	<!-- 교과목 번호로 단원조회 -->
	<select id="getCoursePartByCourseNo" parameterType="int" resultType="coursePart">
		select 
			c.course_no "course.no",
			c.professor_no "course.professor.no",
			c.major_no "course.major.no",
			c.course_name "course.name",
			c.course_credit "course.credit",
			c.course_year "course.year",
			c.course_term "course.term",
			c.course_must_yn "course.mustYn",
			c.course_pass_yn "course.passYn",
			c.course_create_date "course.createDate",
			c.course_quota "course.quota",
			c.course_count "course.count",
            p.course_part_no no,
            p.course_part_name name,
            p.course_part_week week
            
		from
			courses c, course_parts p
		where
			c.course_no = #{value}
        and
            c.course_no = p.course_no
	</select>
	<!-- 교과목번호로 교과목 조회 -->
	<select id="getCourseByCourseNo" resultType="course" parameterType="int">
		select 
			c.course_no no,
			c.professor_no "professor.no",
			f.professor_name "professor.name",
			c.major_no "major.no",
			m.major_name "major.name",
			c.course_name name,
			c.course_credit credit,
			c.course_year year,
			c.course_term term,
			c.course_must_yn mustYn,
			c.course_pass_yn passYn,
			c.course_create_date createDate,
			c.course_quota quota,
			c.course_count count
		from
			courses c, majors m, professors f
		where
			c.course_no = #{value}
		and
			c.major_no = m.major_no
		and
			c.professor_no = f.professor_no
	</select>
	<!-- 교수번호로 년도 조회 -->
	<select id="getYearByProfessorNo" resultType="course" parameterType="int">
		select 
			distinct c.course_year year
		from
			courses c, majors m
		where
			c.professor_no = #{value}
		and
			c.major_no = m.major_no
	</select>
	<!-- 교수번호로 학과이름 조회 -->
	<select id="getMajorByProfessorNo" resultType="course" parameterType="int">
		select    
		    distinct m.major_name "major.name"
		from
			courses c, majors m
		where
			c.professor_no = #{value}
		and
			c.major_no = m.major_no
	</select>
	
	<select id="searchByOptions" resultType="course" parameterType="map">
		select 
			*
			
		from
			(
				select
					c.course_no no,
					c.professor_no "professor.no",
					f.professor_name "professor.name",
					c.major_no "major.no",
					m.major_name "major.name",
					c.course_name name,
					c.course_credit credit,
					c.course_year year,
					c.course_term term,
					c.course_must_yn mustYn,
					c.course_pass_yn passYn,
					c.course_create_date createDate,
					c.course_quota quota,
					c.course_count count,
					row_number() over (order by c.course_no asc) rn
				from
					courses c, majors m, professors f
				<where>
					c.professor_no = #{profId}
					
					and
                        c.major_no = m.major_no
                    and
                        c.professor_no = f.professor_no
					<if test="year != null">
						and c.course_year = #{year}
					</if>
					<if test="term != null">
						and c.course_term = #{term}
					</if>
					<if test="credit != null">
						and c.course_credit = #{credit}
					</if>
					<if test="part != null">
						and m.major_name = #{part}
					</if>
					<if test="courseNum != null">
						and c.course_no like '%' || #{courseNum} ||'%'
					</if>
					<if test="courseName != null">
						and c.course_name like '%' || #{courseName} ||'%'
					</if>
				</where>	
			)
		where
			rn >= #{beginIndex}
		and
			rn &lt;= #{endIndex}
	</select>
	
	<select id="getRows" parameterType="map" resultType="int">
		select
			count(*)
		from
			courses c, majors m, professors f
		<where>
			c.professor_no = #{profId}
			and
                c.major_no = m.major_no
            and
                c.professor_no = f.professor_no
			<if test="year != null">
				and c.course_year = #{year}
			</if>
			<if test="term != null">
				and c.course_term = #{term}
			</if>
			<if test="credit != null">
				and c.course_credit = #{credit}
			</if>
			<if test="part != null">
				and m.major_name = #{part}
			</if>
			<if test="courseNum != null">
				and c.course_no like '%' || #{courseNum} ||'%'
			</if>
			<if test="courseName != null">
				and c.course_name like '%' || #{courseName} ||'%'
			</if>
		</where>	
	</select>
	
	<insert id="addTest" parameterType="test">
		insert into tests
		(test_no, course_no, test_status, test_file_name)
		values 
		(test_seq.nextval, #{no}, #{status}, #{fileName})
	</insert>
</mapper>