<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="kr.ac.ju.dao.StudentDao">
	
	<resultMap type="student" id="studentResultMap">
		<result property="no" column="student_no"/>
		<result property="major.no" column="major_no"/>
		<result property="professor.no" column="professor_no"/>
		<result property="name" column="student_name"/>
		<result property="password" column="student_password"/>
		<result property="birth" column="student_birth"/>
		<result property="gender" column="student_gender"/>
		<result property="email" column="student_email"/>
		<result property="phoneNumber" column="student_phone_number"/>
		<result property="address" column="student_address"/>
		<result property="grade" column="student_grade"/>
		<result property="transferYn" column="transfer_yn"/>
		<result property="status.no" column="status_no"/>
		<result property="createDate" column="student_create_date"/>
		<result property="division" column="student_div"/>
		<result property="photoName" column="student_photo_name"/>
	</resultMap>
	
	<resultMap type="student" id="studentWithMajorResultMap">
		<result property="no" column="student_no"/>
		<result property="major.no" column="major_no"/>
		<result property="major.name" column="major_name"/>
		<result property="professor.no" column="professor_no"/>
		<result property="name" column="student_name"/>
		<result property="password" column="student_password"/>
		<result property="birth" column="student_birth"/>
		<result property="gender" column="student_gender"/>
		<result property="email" column="student_email"/>
		<result property="phoneNumber" column="student_phone_number"/>
		<result property="address" column="student_address"/>
		<result property="grade" column="student_grade"/>
		<result property="transferYn" column="transfer_yn"/>
		<result property="status.no" column="status_no"/>
		<result property="createDate" column="student_create_date"/>
		<result property="division" column="student_div"/>
		<result property="photoName" column="student_photo_name"/>
	</resultMap>
	
	<resultMap type="java.util.HashMap" id="studentRecoredResultMap">
		<result javaType="java.lang.Integer" property="courseNo" column="course_no"/>
		<result javaType="java.lang.String" property="mustYn" column="course_must_yn"/>
		<result javaType="java.lang.String" property="courseName" column="course_name"/>
		<result javaType="java.lang.String" property="professorName" column="professor_name"/>
		<result javaType="java.lang.Integer" property="credit" column="course_credit"/>
		<result javaType="java.lang.Double" property="totalcnt" column="totalcnt"/>
		<result javaType="java.lang.String" property="record" column="course_attend_record"/>
		<result javaType="java.lang.Integer" property="courseOpinionNo" column="course_opinion_no"/>
	</resultMap>
	
	<!--  
		작성자 : 오찬식
		기능 : 교과목, 단원, 강의, 강의시청 정보를 담는 HashMap 객체
	-->
	<resultMap type="hashmap" id="coursedetailInfoResultMap">
		<result javaType="java.lang.Integer" property="courseNo" column="course_no"/>
		<result javaType="java.lang.String" property="courseName" column="course_name"/>
		<result javaType="java.lang.Integer" property="partNo" column="course_part_no"/>
		<result javaType="java.lang.Integer" property="classNo" column="class_no"/>
		<result javaType="java.lang.String" property="className" column="class_name"/>
		<result javaType="java.lang.String" property="video" column="class_video_name"/>
		<result javaType="java.lang.Integer" property="viewNo" column="class_view_no"/>
		<result javaType="java.lang.String" property="viewTime" column="view_time"/>
		<result javaType="java.lang.String" property="viewYn" column="view_status_yn"/>
		<result javaType="java.lang.Integer" property="percentage" column="view_percentage"/>
	</resultMap>
	
	<!--  
		작성자 : 오찬식
		기능 : 단원 정보와 단원의 평균 진행도를 담는 HashMap 객체
	-->
	<resultMap type="hashmap" id="getAvgCoursepartsViewResultMap">
		<result javaType="java.lang.Integer" property="no" column="course_part_no"/>
		<result javaType="java.lang.String" property="name" column="course_part_name"/>
		<result javaType="java.lang.Integer" property="week" column="course_part_week"/>
		<result javaType="java.lang.Integer" property="avg" column="part_avg"/>
	</resultMap>
	
	<select id="getStudentByNo" parameterType="int" resultMap="studentWithMajorResultMap">
		select *
		from students S, majors M
		where student_no = #{value}
		and S.major_no = M.major_no
	</select>
	
	<select id="getYearTermsByStudentNo" parameterType="int" resultType="course">
		select distinct	C.course_year as year, 
						C.course_term as term
		from course_attends CA, courses C
		where CA.course_no = C.course_no
			and student_no = #{value}
			and CA.course_attend_record is not null
		order by C.course_year asc
	</select>
	
	<select id="getAllCoursesByStudentNo" parameterType="int" resultType="courseAttend">
		select	S.student_no as "student.no",
				P.professor_name as "course.professor.name",
				C.course_no as "course.no",
				C.course_name as "course.name",
				C.course_credit as "course.credit",
				C.course_year as "course.year",
				C.course_term as "course.term",
				C.course_must_yn as "course.mustYn",
				CA.course_attend_record as record
		from course_attends CA, students S, courses C, professors P
		where S.student_no = CA.student_no
			and C.course_no = CA.course_no
			and P.professor_no = C.professor_no
			and C.course_pass_yn = 'Y'
			and CA.course_attend_record is not null
			and S.student_no = #{value}
		order by C.course_no
	</select>
	
	<select id="getCourseByCourseNo" parameterType="int" resultType="course">
		select	C.course_year as year,
				C.course_term as term,
				C.course_no as no,
				C.course_name as name,
				C.course_must_yn as mustYn,
				C.course_credit as credit,
				P.professor_name as "professor.name",
				C.course_count as count
		from courses C, professors P
		where C.professor_no = P.professor_no
			and C.course_no = #{value}
	</select>
	
	<select id="getMinusCoursesByStudentNo" parameterType="map" resultType="course">
		select	C.course_no as no,
				C.course_name as name,
				C.course_year as year,
				C.course_term as term,
				C.course_must_yn as mustYn,
				C.course_credit as credit,
				P.professor_name as "professor.name",
				C.course_quota as quota,
				C.course_count as count
		from courses C, professors P
		where C.course_year = #{year}
		and C.course_term = #{term}
		and C.professor_no = P.professor_no
		minus
		select C.course_no, C.course_name, C.course_year, C.course_term, C.course_must_yn,
				C.course_credit, P.professor_name, C.course_quota, C.course_count
		from courses C, COURSE_ATTENDS CA, professors P
		where C.COURSE_NO = CA.COURSE_NO
		and C.professor_no = P.professor_no
		and CA.STUDENT_NO = #{studentNo}
	</select>
	
	<!--  
		작성자 : 오찬식
		기능 : 특정 학생이 특정 학년, 특정 학기에 수강하는 모든 교과목정보를 뽑는 쿼리문
	-->
	<select id="getAllCoursesWithProfessorAndMajorByStudentNo" parameterType="map" resultType="course">
		select
			C.course_no no,
			P.professor_name "professor.name",
			M.major_name "major.name",
			C.course_name name,
			C.course_credit credit,
			C.course_year year,
			C.course_term term,
			C.course_must_yn mustYn,
			C.course_pass_yn passYn,
			C.course_create_date createDate,
			C.course_quota quota,
			C.course_count count
		from
			courses C, course_attends CA, professors P, majors M
		where
			C.course_no = CA.course_no
		and
			C.professor_no = P.professor_no
		and
			C.major_no = M.major_no
		and 
			CA.student_no = #{studentNo}
		and
			C.course_year = ${year}
		and
			C.course_term = #{term}
		order by 
			C.course_no
	</select>
	
	<!-- 
		작성자 : 오찬식
		기능 : 특정학생이 특정 연도와 특정학기에 수강하는 모든 교과목 숫자를 뽑는 쿼리문
	-->
	<select id="countCurrentCoursesByStudentNo" parameterType="map" resultType="int">
		select
			count(*)
		from
			courses C, course_attends CA
		where
			C.course_no = CA.course_no
		and
			CA.student_no = #{studentNo}
		and
			C.course_year = #{year}
		and 
			C.course_term = #{term}
	</select>

	<select id="getCoursesByStudentNoAndYearTerm" parameterType="map" resultType="courseAttend">
		select	S.student_no as "student.no",
				P.professor_name as "course.professor.name",
				C.course_no as "course.no",
				C.course_name as "course.name",
				C.course_credit as "course.credit",
				C.course_year as "course.year",
				C.course_term as "course.term",
				C.course_must_yn as "course.mustYn",
				CA.course_attend_record as record
		from course_attends CA, students S, courses C, professors P
		where S.student_no = CA.student_no
			and C.course_no = CA.course_no
			and P.professor_no = C.professor_no
			and C.course_pass_yn = 'Y'
			and S.student_no = #{studentNo}
			and C.course_year = #{year}
			and C.course_term = #{term}
		order by C.course_no
	</select>
	
	<select id="getAllRecordesByStudentNo" parameterType="map" resultMap="studentRecoredResultMap">
		select 
			H.course_no courseNo, 
			Y.course_must_yn mustYn, 
			Y.course_name courseName, 
			Z.professor_name professorName,
			Y.course_credit credit, 
			totalcnt, 
			W.course_attend_record record, 
			W.course_opinion_no courseOpinionNo
		from 
			(select 
				F.student_no, 
				F.course_no, 
				sum(F.cnt+G.course_attend_point) totalcnt
			from 
				(select 
					B.student_no, 
					A.course_no, 
					sum(B.result_score) cnt
				from 
					tests A, 
					test_results B, 
					courses C, 
					students D
				where 
					A.test_no = B.test_no
					and A.course_no = C.course_no
					and B.student_no = D.student_no
					and B.student_no = #{studentNo}
					and C.course_year = #{year}
					and C.course_term = #{term}
				group by B.student_no, A.course_no) F, course_attends G
			where 
				F.course_no = G.course_no 
				and G.student_no = F.student_no
			group by 
				F.course_no, 
				F.student_no) H, courses Y, professors Z, course_attends W
		where 
			H.course_no = Y.course_no 
			and Y.professor_no = Z.professor_no 
			and Y.course_no = W.course_no
			and H.student_no = W.student_no
	</select>
	
	<!--
		작성자 : 오찬식
		기능 : 특정 학생이 수강하는 특정 교과목의 교과목, 단원, 강의, 강의시청 정보를 뽑는 쿼리문
	-->
	<select id="getCoursedetailSource" parameterType="map" resultMap="coursedetailInfoResultMap">
		select
			X.course_no courseNo,
		    X.course_name courseName,
		    CP.course_part_no partNo,
		    CL.class_no	classNo,
		    CL.class_name className,
		    CL.class_video_name video,
		    CV.class_view_no viewNo,
		    CV.view_time viewTime,
		    CV.view_status_yn viewYn,
		    nvl(CV.view_percentage, 0) percentage
		from
		    (select
		        C.course_no,
		        C.course_name
		    from
		        course_attends CA, courses C
		    where 
		        C.course_no = CA.course_no
		    and
		        CA.course_no = #{courseNo}
		    and
		        CA.student_no = #{studentNo}) X, course_parts CP, classes CL, class_views CV
		where
		    X.course_no = CP.course_no
		and
		    CP.course_part_no = CL.course_part_no
		and
		    CL.class_no = CV.class_no
		order by 
		    CL.class_no
	</select>
	
	<!--  
		작성자 : 오찬식
		기능 : 특정 학생이 수강하는 특정 교과목의 평균 수강 진행도를 뽑는 쿼리문
	-->
	<select id="getAvgCourseView" parameterType="map" resultType="int">
		select
		    avg(nvl(CV.view_percentage, 0)) 
		from
		    (select
		        C.course_no,
		        C.course_name
		    from
		        course_attends CA, courses C
		    where 
		        C.course_no = CA.course_no
		    and
		        CA.course_no = #{courseNo}
		    and
		        CA.student_no = #{studentNo}) X, course_parts CP, classes CL, class_views CV
		where
		    X.course_no = CP.course_no
		and
		    CP.course_part_no = CL.course_part_no
		and
		    CL.class_no = CV.class_no
	</select>
	
	<!--  
		작성자 : 오찬식
		기능 : 특정 학생이 수강하는 특정 교과목의 단원정보와 단원 평균 진행도를 뽑는 쿼리문
	-->
	<select id="getPartInfos" parameterType="map" resultMap="getAvgCoursepartsViewResultMap">
		select
		    Y.course_part_no no,
		    Z.course_part_name name,
		    Z.course_part_week week,
		    Y.part_avg avg
		from
		    (select
		        CP.course_part_no,
		        avg(nvl(CV.view_percentage, 0)) part_avg
		    from
		        (select
		            C.course_no,
		            C.course_name
		        from
		            course_attends CA, courses C
		        where 
		            C.course_no = CA.course_no
		        and
		            CA.course_no = #{courseNo}
		        and
		            CA.student_no = #{studentNo}) X, course_parts CP, classes CL, class_views CV
		    where
		        X.course_no = CP.course_no
		    and
		        CP.course_part_no = CL.course_part_no
		    and
		        CL.class_no = CV.class_no
		    group by 
		        CP.course_part_no) Y, course_parts Z
		where
		    Y.course_part_no = Z.course_part_no
		order by
		    Z.course_part_week
	</select>
	
	<select id="getStudentInfoByNo" parameterType="int" resultType="student">
		select 
			S.student_no no, 
			M.major_name "major.name", 
			S.student_grade grade, 
			S.student_div division, 
			P.professor_name "professor.name", 
			S.student_phone_number phoneNumber
		from 
			students S, 
			Majors M, 
			professors P
		where 
			S.professor_no = P.professor_no 
			and S.major_no = M.major_no
			and student_no = #{value}
	</select>
	
	<select id="getStudentStatusByNo" parameterType="int" resultType="student">
		select 
			SS.status_no  "studentStatus.no",
			SS.start_term "studentStatus.startTerm", 
			SS.term_count "studentStatus.termCount", 
			M.major_name "major.name", 
			SS.status_div "studentStatus.division", 
			SS.status_contents "studentStatus.contents", 
			SS.student_create_date "studentStatus.createDate", 
			SS.pass_yn "studentStatus.passYn"
		from 
			student_status SS, 
			majors M, 
			students S
		where 
			S.student_no = SS.student_no 
			and S.major_no = M.major_no
			and S.student_no = #{value}
		order by
			SS.status_no desc
	</select>
	
	<insert id="insertStudentStatus" parameterType="studentStatus">
		insert into student_status
			(status_no,
			status_div,
			start_term,
			term_count,
			pass_yn,
			student_create_date,
			status_contents,
			student_no)
		values
			(student_status_seq.nextval,
			#{division},
			#{startTerm},
			#{termCount},
			'W',
			sysdate,
			#{contents},
			#{student.no})
	</insert>
	
	<!--  
		작성자 : 오찬식
		기능 : 강의 번호로 강의 정보를 뽑는 쿼리문
	-->
	<select id="getClassByClassNo" parameterType="int" resultType="cla">
		select
			class_no no,
			course_part_no "coursePart.no",
			class_name name,
			class_video_name videoName,
			class_create_date createDate
		from
			classes
		where 
			class_no = #{value}
	</select>
	
	<!--  
		작성자 : 오찬식
		기능 : 특정 학생이 듣는 특정 강의의 강의시청정보를 뽑는 쿼리문
	-->
	<select id="getClassViewByStudentNoAndClassNo" parameterType="map" resultType="classview">
		select
			class_view_no no,
			student_no "student.no",
			class_no "cla.no",
			view_time time,
			view_status_yn statusYn,
			view_percentage percentage,
			view_create_date createDate,
			course_no "course.no"
		from
			class_views
		where
			student_no = #{studentNo}
		and
			class_no = #{classNo}
	</select>
	
	<update id="updateMyPage" parameterType="student">
		update students
		set	student_password = #{password},
			student_email = #{email},
			student_phone_number = #{phoneNumber},
			student_address = #{address},
			student_photo_name = #{photoName}
		where student_no = #{no}
	</update>

	<delete id="deleteStudentStatus" parameterType="int">
		delete from student_status
		where status_no = #{value}
	</delete>
	
	<select id="getStatusCheckByNo" parameterType="map" resultType="studentstatus">
		select 
			status_no no,
			status_div division,
			start_term startTerm,
			term_count termCount,
			pass_yn passYn,
			student_create_date createDate,
			status_contents contents,
			student_no "student.no"
		from student_status
		where student_no = #{no}
		and status_div = #{division}
		and pass_yn = 'W'
	</select>
	
	<select id="getLeaveStudentByNo" parameterType="int" resultType="student">
		select 
				SS.status_no  "studentStatus.no",
				SS.start_term "studentStatus.startTerm", 
				M.major_name "major.name", 
				SS.status_div "studentStatus.division",
				SS.status_contents,
				SS.student_create_date "studentStatus.createDate"
			from 
				student_status SS,
				student_status B,
				majors M, 
				students S
			where 
				S.student_no = SS.student_no 
				and S.major_no = M.major_no
				and S.student_no = #{no}
				and SS.status_div = '휴학'
				and SS.pass_yn = 'P'
			minus
			select 
				SS.status_no  "studentStatus.no",
				SS.start_term "studentStatus.startTerm", 
				M.major_name "major.name", 
				SS.status_div "studentStatus.division",
				SS.status_contents,
				SS.student_create_date "studentStatus.createDate"
			from 
				student_status SS, 
				student_status B,
				majors M, 
				students S
			where 
				S.student_no = SS.student_no 
				and S.major_no = M.major_no
				and S.student_no = #{no}
				and SS.status_div = '휴학'
				and SS.pass_yn = 'P'
				and SS.status_no = B.start_term
	</select>
	
	<insert id="insertCourseAttendsByStudentNo" parameterType="courseAttend">
		insert into course_attends(course_attend_no, student_no, course_no)
		values(course_attend_seq.nextval, #{student.no}, #{course.no})
	</insert>
	
	<update id="updateCourseCount" parameterType="course">
		update courses
		set course_count = #{count}
		where course_no = #{courseNo}
	</update>
	
	<delete id="deleteCourseAttendsByCourseNo" parameterType="map">
		delete
		from course_attends
		where course_no = #{courseNo}
			and student_no = #{studentNo}
	</delete>

	<!--  
		작성자 : 오찬식
		기능 : 강의시청 정보를 수정하는 쿼리문
	-->
	<update id="updateClassView" parameterType="classview">
		update class_views
		set
			view_time = #{time},
			view_status_yn = #{statusYn},
			view_percentage = #{percentage}
		where
			class_view_no = #{no}
	</update>
	
	<!--  
		작성자 : 오찬식
		기능 : 강의시청번호로 강의시청정보를 뽑는 쿼리문
	-->
	<select id="getClassViewByClassViewNo" parameterType="int" resultType="classView">
		select
			class_view_no no,
			student_no "student.no",
			class_no "cla.no",
			view_time time,
			view_status_yn statusYn,
			view_percentage percentage,
			view_create_date createDate,
			course_no "course.no"
		from
			class_views
		where
			class_view_no = #{value}
	</select>
	
	<select id="getAllNotices" resultType="notice">
		select	notice_no as no,
				notice_writer as writer,
				notice_title as title,
				notice_contents as contents,
				notice_file_name as fileName,
				notice_create_date as createDate
		from notices
		order by notice_no desc
	</select>
	
	<select id="getNoticeByNoticeNo" parameterType="int" resultType="notice">
		select	notice_no as no,
				notice_writer as writer,
				notice_title as title,
				notice_contents as contents,
				notice_file_name as fileName,
				notice_create_date as createDate
		from notices
		where notice_no = #{value}
	</select>
	
</mapper>